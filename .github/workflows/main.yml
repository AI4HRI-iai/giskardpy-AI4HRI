name: CI
on:
  push:
    branches: [ devel ]
  pull_request:
    branches: [ devel ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: 'ros_ws/src/giskardpy' 
        repository: SemRoCo/giskardpy
        ref: devel
    - name: Checkout giskard msgs
      uses: actions/checkout@v2
      with:
        path: 'ros_ws/src/giskard_msgs'
        repository: SemRoCo/giskard_msgs
    - name: Checkout qpoases
      uses: actions/checkout@v2
      with:
        path: 'ros_ws/src/qpOASES'
        repository: SemRoCo/qpOASES
        ref: noetic
    - name: Checkout qpoases
      uses: actions/checkout@v2
      with:
        path: 'ros_ws/src/iai_pr2'
        repository: code-iai/iai_pr2
    - name: Setup Giskard workspace
      uses: betwo/github-setup-catkin@master
      env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        # Version range or exact version of ROS version to use, using SemVer's version range syntax. 
        ros-version: noetic
        build-tool: 'catkin_tools'
        # Root directory of the catkin workspace
        workspace: $GITHUB_WORKSPACE/ros_ws
#     - name: Setup ROS noetic environment
#       uses: ros-tooling/setup-ros@0.4.1
#       with:
#         required-ros-distributions: noetic
    - name: install python deps
      shell: bash
      run: |
        sudo pip3 install numpy==1.22.2 scipy casadi sortedcontainers hypothesis pandas trimesh colour pycollada pytest catkin_tools
        python -m pytest --version
    - name: install Giskard deps
      shell: bash
      run: |
        sudo apt install python3-dev ros-noetic-pr2-description
    - name: build Giskard
      shell: bash
      run: |
        cd ros_ws
        catkin build
    - name: Run Giskard
      shell: bash
      run: |
        export ROS_HOSTNAME=localhost
        roscore &
        source $GITHUB_WORKSPACE/ros_ws/devel/setup.bash
        cd $GITHUB_WORKSPACE/ros_ws/src/giskardpy
        python3 -m pytest -s test/test_integration_pr2.py::TestConstraints::test_align_planes1
#     - name: Report plunit results as Github Actions Annotations
#       uses: daniel86/junit-report-annotations-action@master
#       with:
#         path: junit-*.xml
#         stripFromPath: /home/runner/work/knowrob/knowrob/ros_ws/src/knowrob/
#         accessToken: ${{ secrets.GITHUB_TOKEN }}
    #####
#     - name: Run pldoc
#       if: ${{ github.event_name == 'push' }}
#       shell: bash
#       run: |
#         source $GITHUB_WORKSPACE/ros_ws/devel_isolated/setup.bash
#         cp $GITHUB_WORKSPACE/ros_ws/src/knowrob/README.md $GITHUB_WORKSPACE/ros_ws/src/knowrob/src/
#         rosrun rosprolog rosprolog-doc knowrob
#     - name: Move checkout
#       run: |
#         mv $GITHUB_WORKSPACE/ros_ws/src/knowrob/.git $GITHUB_WORKSPACE/
#         mv $GITHUB_WORKSPACE/ros_ws/src/knowrob/* $GITHUB_WORKSPACE/
#     - name: Extract branch name
#       shell: bash
#       run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#       id: extract_branch
#     - name: Deploy pldoc to gh-pages
#       if: ${{ github.event_name == 'push' }}
#       uses: JamesIves/github-pages-deploy-action@3.5.7
#       with:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         # The branch the action should deploy to.
#         BRANCH: gh-pages
#         # The folder the action should deploy.
#         FOLDER: doc
#         # The folder in the target branch
#         TARGET_FOLDER: ${{ steps.extract_branch.outputs.branch }}
#         CLEAN: true
#         SINGLE_COMMIT: true
