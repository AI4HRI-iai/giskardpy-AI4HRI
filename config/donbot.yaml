general_options:
  sample_period: 0.02 # time[s] between points of generated joint trajectory
  map_frame: map
  fill_velocity_values: True # due to a bug, the pr2 does not want the velocity values to be filled
  joint_convergence_threshold: 0.01 # when the velocities fall below this value, the planning succeeds
  joint_vel_limit: # giskard will use the min of this number and limits from the urdf
    default: 1
  joint_acceleration_limit: # multiply your desired acc limit with sample period; experimental, don't touch
    default: 100
  joint_weights: # the planner prefers low weight joints to achieve solutions
    default: 0.001
    odom_x_joint: 1
    odom_y_joint: 1
    odom_z_joint: 1
qp_solver:
  nWSR: None # None results in a nWSR estimation thats fine most of the time
plugins:
  VisualizationBehavior: # planning visualization through markers, slows planning down a little bit
    enabled: True
  CPIMarker: # contact visualization, slows planning down a little bit
    enabled: True
  PlotTrajectory: # plots the joint trajectory at the end of planning
    enabled: True
  WiggleCancel: # cancels planning if high frequencies are detected in the trajectory
    fft_duration: 3
    wiggle_detection_threshold: 10
    min_wiggle_frequency: 3
behavior_tree:
  debug: False # prints the behavior tree state in the terminal
  tree_tick_rate: 0.1 # how often the tree updates. lower numbers increase responsiveness, but waste cpu time while idle
collision_avoidance:
  distance_thresholds:
    default:
      max_weight_distance: 0.0
      low_weight_distance: 0.01
      zero_weight_distance: 0.05
    high: &high
      max_weight_distance: 0.01
      low_weight_distance: 0.03
      zero_weight_distance: 0.05
    low: &low
      max_weight_distance: 0.005
      low_weight_distance: 0.01
      zero_weight_distance: 0.02
    base_link:
      max_weight_distance: 0.04
      low_weight_distance: 0.06
      zero_weight_distance: 0.09
    ur5_wrist_1_link: *low
    ur5_wrist_2_link: *low
    ur5_wrist_3_link: *low
    ur5_forearm_link: *low
    ur5_upper_arm_link: *low
  self_collision_avoidance:
    ignore: []
    add:
      - [plate, ur5_upper_arm_link]
  external_collision_avoidance:
    number_of_repeller: 5
